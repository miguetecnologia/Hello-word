/*
 PRUEBA CONTROL DEL MOTOR
 by miguetecnologia
 MARZO 2018
*/
// variables constantes para los pines XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

const int controlPin1 = 2;            
const int controlPin2 = 3;           
const int enablePin = 9;            
const int directionSwitchPin = 4;    
const int onOffSwitchStatePin = 5;   
const int RedPin = 12;
const int GreenPin = 11;

// variables que pueden cambiar XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

int onOffSwitchState = 0;              //Estado del interruptor
int previousonOffSwitchState = 0;      //Estado previo del interruptor
int directionSwitchState = 0;          //Estado sentido de giro
int previousdirectionSwitchState = 0;  //Estado previo sentido de giro

int motorEnabled = 0;                  //Motor encendido
int motorDirection =1;                 //Direccion del motor

//Inicialiciamos y preparamos los valores XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

void setup() 
{
pinMode(directionSwitchPin, INPUT);           
pinMode(onOffSwitchStatePin, INPUT);          
pinMode(controlPin1, OUTPUT);
pinMode(controlPin2, OUTPUT);
pinMode(enablePin, OUTPUT);
pinMode(RedPin, OUTPUT);
pinMode(GreenPin, OUTPUT);

digitalWrite(enablePin, LOW);
}


//La funcion loop o lazo se ejecuta consecutivamente XXXXXXXXXXXXXXXXXXXX

void loop()
{
onOffSwitchState=digitalRead(onOffSwitchStatePin);
delay(1);
directionSwitchState=digitalRead(directionSwitchPin);

if(onOffSwitchState !=previousonOffSwitchState){
  if(onOffSwitchState == HIGH){
    motorEnabled=!motorEnabled;
  }
} 
if(directionSwitchState != previousdirectionSwitchState){
  if(directionSwitchState == HIGH){
    motorDirection=!motorDirection;
  }
}
if(motorDirection == 1){
  digitalWrite(controlPin1, HIGH);
  digitalWrite(controlPin2, LOW);
  digitalWrite(GreenPin, HIGH);
  digitalWrite(RedPin, LOW);
}
else{
  digitalWrite(controlPin1, LOW);
  digitalWrite(controlPin2, HIGH);
  digitalWrite(GreenPin, LOW);
  digitalWrite(RedPin, HIGH);
}
if(motorEnabled == 1){
  digitalWrite(enablePin, 1);
 }
else{
  digitalWrite(enablePin, 0);
  }
previousdirectionSwitchState = directionSwitchState;
previousonOffSwitchState = onOffSwitchState;
}
